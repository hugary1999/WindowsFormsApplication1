<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +Y0L7FEY+/EAAAAASUVORK5CYII=
</value>
  </data>
</root>